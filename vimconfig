:set nu "设置显示行号  
:set backspace=2 "能使用backspace回删  
:syntax on "语法检测  
:set ruler "显示最后一行的状态  
:set hlsearch "高亮度反白  
:set laststatus=2 "两行状态行+一行命令行  
:set cindent "设置c语言自动对齐  
:set t_Co=256 "指定配色方案为256  
:set mouse=a "设置可以在VIM使用鼠标  
:set tabstop=4 "设置TAB宽度 
:set softtabstop=4 "插入模式下tag长度
:set expandtab     "将tab所占的空白位用空格填充
:set history=1000 "设置历史记录条数  
:set nocompatible "设置不兼容 

"PATHOGEN配置  
:execute pathogen#infect()  
:filetype plugin on "允许插件  
:filetype plugin indent on "启动智能补全

"快捷键:使用F3打开关闭  
map <F3> :NERDTreeMirror <CR>   
map <F3> :NERDTreeToggle <CR>    
"NERDTree配置    
let NERDChristmasTree=1 "显示增强  
let NERDTreeAutoCenter=1 "自动调整焦点  
let NERDTreeShowFiles=1 "显示文件  
let NERDTreeShowLineNumbers=1 "显示行号  
let NERDTreeHightCursorline=1 "高亮当前文件  
let NERDTreeShowHidden=0 "显示隐藏文件  
let NERDTreeMinimalUI=0 "不显示'Bookmarks' label 'Press ? for help'  
let NERDTreeWinSize=31 "窗口宽度 

"配置Supertab  
let g:SuperTabRetainCompletionType=2 "记住上次的补全方式,直到按Esc退出插入模式位置  
let g:SuperTabDefaultCompletionType="<c-x><c-o>"  "按下tab后默认补全方式为<c-p>,现在改为<c-x><c-o>

"配置taglist
let Tlist_Auto_Open = 1
let Tlist_Ctags_Cmd = '/usr/bin/ctags'
let Tlist_Show_One_File = 1
let Tlist_Exit_OnlyWindow = 1

"配置desert
syntax enable
colorscheme desert



"配置vim airline
""-------------------------------------------------------------
" AIRLINE
" ------------------------------------------------------------
" enable powerline fonts
let g:airline_powerline_fonts = 1
" enable tabline
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
" show tab number in tab line
let g:airline#extensions#tabline#tab_nr_type = 1
let g:airline#extensions#tabline#formatter = 'default'
let g:airline#extensions#vimtex#left = ""
let g:airline#extensions#vimtex#right = ""
"
set laststatus=2 " Show the statusline
set noshowmode " Hide the default mode text
"  airline symbols dictionary
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
if has("gui_running")
  set guifont=MesloLGSDZForPowerline-Regular:h16
endif
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''

" gutentags搜索工程目录的标志，碰到这些文件/目录名就停止向上一级目录递归 
let g:gutentags_project_root = ['.root', '.svn', '.git', '.project']

" 所生成的数据文件的名称 
let g:gutentags_ctags_tagfile = '.tags'

" 将自动生成的 tags 文件全部放入 ~/.cache/tags 目录中，避免污染工程目录 
let s:vim_tags = expand('~/.cache/tags')
let g:gutentags_cache_dir = s:vim_tags
" 检测 ~/.cache/tags 不存在就新建 "
if !isdirectory(s:vim_tags)
   silent! call mkdir(s:vim_tags, 'p')
endif

" 配置 ctags 的参数 
let g:gutentags_ctags_extra_args = ['--fields=+niazS', '--extra=+q']
let g:gutentags_ctags_extra_args += ['--c++-kinds=+pxI']
let g:gutentags_ctags_extra_args += ['--c-kinds=+px']

" 配置cscope
if has("cscope") && filereadable("/usr/bin/cscope")
    set csprg=/usr/bin/cscope
    set csto=0
    set cst
    set nocsverb
    " add any database in current directory
    if filereadable("cscope.out")
       cs add cscope.out
    " else add database pointed to by environment
    elseif $CSCOPE_DB != ""
       cs add $CSCOPE_DB
    endif
    set csverb
endif

"map g<C-]> :cs find 3 <C-R>=expand(“<cword>”)<CR><CR>
"map g<C-/> :cs find 0 <C-R>=expand(“<cword>”)<CR><CR>


  
